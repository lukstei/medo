/**
 * This class is generated by jOOQ
 */
package lst.medo.generated;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<lst.medo.generated.tables.records.ArticleRecord, java.lang.Integer> IDENTITY_ARTICLE = Identities0.IDENTITY_ARTICLE;
	public static final org.jooq.Identity<lst.medo.generated.tables.records.AuthorRecord, java.lang.Integer> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
	public static final org.jooq.Identity<lst.medo.generated.tables.records.MediaRecord, java.lang.Integer> IDENTITY_MEDIA = Identities0.IDENTITY_MEDIA;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleRecord> ARTICLE_PKEY = UniqueKeys0.ARTICLE_PKEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE_TYPE_PKEY = UniqueKeys0.ARTICLE_TYPE_PKEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE_TYPE_NAME_KEY = UniqueKeys0.ARTICLE_TYPE_NAME_KEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.AuthorRecord> AUTHOR_PKEY = UniqueKeys0.AUTHOR_PKEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.AuthorRecord> AUTHOR_NAME_KEY = UniqueKeys0.AUTHOR_NAME_KEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.MediaRecord> MEDIA_PKEY = UniqueKeys0.MEDIA_PKEY;
	public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.MediaRecord> MEDIA_NAME_KEY = UniqueKeys0.MEDIA_NAME_KEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<lst.medo.generated.tables.records.ArticleRecord, lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE__ARTICLE_ARTICLE_TYPE_FKEY = ForeignKeys0.ARTICLE__ARTICLE_ARTICLE_TYPE_FKEY;
	public static final org.jooq.ForeignKey<lst.medo.generated.tables.records.ArticleRecord, lst.medo.generated.tables.records.AuthorRecord> ARTICLE__ARTICLE_AUTHOR_FKEY = ForeignKeys0.ARTICLE__ARTICLE_AUTHOR_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<lst.medo.generated.tables.records.ArticleRecord, java.lang.Integer> IDENTITY_ARTICLE = createIdentity(lst.medo.generated.tables.Article.ARTICLE, lst.medo.generated.tables.Article.ARTICLE.ID);
		public static org.jooq.Identity<lst.medo.generated.tables.records.AuthorRecord, java.lang.Integer> IDENTITY_AUTHOR = createIdentity(lst.medo.generated.tables.Author.AUTHOR, lst.medo.generated.tables.Author.AUTHOR.ID);
		public static org.jooq.Identity<lst.medo.generated.tables.records.MediaRecord, java.lang.Integer> IDENTITY_MEDIA = createIdentity(lst.medo.generated.tables.Media.MEDIA, lst.medo.generated.tables.Media.MEDIA.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleRecord> ARTICLE_PKEY = createUniqueKey(lst.medo.generated.tables.Article.ARTICLE, lst.medo.generated.tables.Article.ARTICLE.ID);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE_TYPE_PKEY = createUniqueKey(lst.medo.generated.tables.ArticleType.ARTICLE_TYPE, lst.medo.generated.tables.ArticleType.ARTICLE_TYPE.ID);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE_TYPE_NAME_KEY = createUniqueKey(lst.medo.generated.tables.ArticleType.ARTICLE_TYPE, lst.medo.generated.tables.ArticleType.ARTICLE_TYPE.NAME);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.AuthorRecord> AUTHOR_PKEY = createUniqueKey(lst.medo.generated.tables.Author.AUTHOR, lst.medo.generated.tables.Author.AUTHOR.ID);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.AuthorRecord> AUTHOR_NAME_KEY = createUniqueKey(lst.medo.generated.tables.Author.AUTHOR, lst.medo.generated.tables.Author.AUTHOR.NAME);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.MediaRecord> MEDIA_PKEY = createUniqueKey(lst.medo.generated.tables.Media.MEDIA, lst.medo.generated.tables.Media.MEDIA.ID);
		public static final org.jooq.UniqueKey<lst.medo.generated.tables.records.MediaRecord> MEDIA_NAME_KEY = createUniqueKey(lst.medo.generated.tables.Media.MEDIA, lst.medo.generated.tables.Media.MEDIA.NAME);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<lst.medo.generated.tables.records.ArticleRecord, lst.medo.generated.tables.records.ArticleTypeRecord> ARTICLE__ARTICLE_ARTICLE_TYPE_FKEY = createForeignKey(lst.medo.generated.Keys.ARTICLE_TYPE_PKEY, lst.medo.generated.tables.Article.ARTICLE, lst.medo.generated.tables.Article.ARTICLE.ARTICLE_TYPE);
		public static final org.jooq.ForeignKey<lst.medo.generated.tables.records.ArticleRecord, lst.medo.generated.tables.records.AuthorRecord> ARTICLE__ARTICLE_AUTHOR_FKEY = createForeignKey(lst.medo.generated.Keys.AUTHOR_PKEY, lst.medo.generated.tables.Article.ARTICLE, lst.medo.generated.tables.Article.ARTICLE.AUTHOR);
	}
}
